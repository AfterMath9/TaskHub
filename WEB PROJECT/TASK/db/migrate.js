// code generated by ---ChatGPT---
const fs = require('fs');
const path = require('path');
const bcrypt = require('bcrypt');
const db = require('./connection');

const dataDir = path.join(__dirname, '..', 'data');
if (!fs.existsSync(dataDir)) fs.mkdirSync(dataDir, { recursive: true });

db.serialize(async () => {
  db.run(`PRAGMA foreign_keys = ON;`);

  // USERS (added role)
  db.run(`
    CREATE TABLE IF NOT EXISTS users (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      email TEXT UNIQUE NOT NULL,
      password_hash TEXT NOT NULL,
      role TEXT NOT NULL DEFAULT 'user',
      created_at TEXT NOT NULL DEFAULT (datetime('now'))
    );
  `);

  // CATEGORIES
  db.run(`
    CREATE TABLE IF NOT EXISTS categories (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      name TEXT UNIQUE NOT NULL
    );
  `);

  // TASKS
  db.run(`
    CREATE TABLE IF NOT EXISTS tasks (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      user_id INTEGER NOT NULL,
      category_id INTEGER,
      title TEXT NOT NULL,
      is_done INTEGER NOT NULL DEFAULT 0,
      created_at TEXT NOT NULL DEFAULT (datetime('now')),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
      FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL
    );
  `);

  // Seed
  const adminHash = await bcrypt.hash('wdf#2025', 10);
  const demoHash  = await bcrypt.hash('123456', 10);

  db.run(`INSERT OR IGNORE INTO users (id,email,password_hash,role) VALUES
    (1,'admin','${adminHash}','admin'),
    (2,'demo@user.com','${demoHash}','user')
  `);

  db.run(`INSERT OR IGNORE INTO categories (id,name) VALUES
    (1,'General'),(2,'School'),(3,'Work'),(4,'Home')
  `);

  // Ensure >= 12 tasks (for 4 pages of 3)
  db.run(`DELETE FROM tasks`); // dev convenience; remove if you want to keep
  for (let i = 1; i <= 12; i++) {
    db.run(`INSERT INTO tasks (user_id, category_id, title, is_done)
            VALUES (2, (CASE WHEN ?%4=0 THEN 1 WHEN ?%4=1 THEN 2 WHEN ?%4=2 THEN 3 ELSE 4 END), ?, 0)`,
      [i,i,i, `Sample task #${i}`]);
  }

  console.log('Migration complete (admin / wdf#2025).');
  db.close();
});